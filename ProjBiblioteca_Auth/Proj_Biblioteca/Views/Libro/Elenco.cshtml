@{
    Layout = "_Layout";
}
@using Proj_Biblioteca.Controllers
@using Proj_Biblioteca.Models
@using Proj_Biblioteca.ViewModels
@model Tuple<IEnumerable<Libro>,int>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Elenco</title>
    <link href="~/css/Elenco.css" rel="stylesheet" />
</head>
<body>
    <div class="Elenco">
        <div class="Libri">
            @foreach(Libro item in Model.Item1)
            {
                UtenteViewModel UtenteLoggato = (ViewData["Utente"] as UtenteViewModel ?? new UtenteViewModel() {Nome = "NULL", Email = "NULL", Ruolo="NULL" });

                <div class="Libro @(item.Disponibilita > 0 ? "" : "NonDisponibile")" id="Libro-@(item.ID)">
                    <div class="Img">
                        <img src="~/img/default.jpg"/>
                    </div>
                    <div class="Titolo">@item.Titolo</div>
                    <hr /><br />
                    <span class="Autore">@item.Autore</span>
                    <br /><br />

                    <div class="action">
                        @if(item.Disponibilita > 0)
                        {
                            @Html.ActionLink("Prenota", "Prenota", "Prenotazioni",new{idLibro = item.ID})
                        }
                        else
                        {
                            <span>Non Disponibile</span>
                        }

                        @if (UtenteLoggato != null && UtenteLoggato.Ruolo == "Admin")
                        {
                            @Html.ActionLink("Modifica", "Modifica", "Libro", new { id = item.ID })
                        }
                    </div>
                </div>
            }
        </div>
        <div class="Pagine">

            @{
                var request = ViewContext.HttpContext.Request;
                string requestString = request.QueryString.ToUriComponent() ?? "";

                string urlQuery(int i)
                {
                    string result="";

                    if (requestString.Contains("page"))
                    {
                        int indx = requestString.IndexOf("page=") + 5;
                        
                        ReadOnlySpan<char> span = requestString.AsSpan();
                        result = string.Concat(span[..indx], $"{i}", span[(indx + $"{i - 1}".Length)..]);

                    }
                    else if (requestString.Contains("?"))
                    {
                        result = string.Concat(requestString,$"&page={i}");
                    }
                    else
                    {
                        result = string.Concat(requestString,$"?page={i}");
                    }

                    return result;
                }
            }
            @for(int i=0; i<Model.Item2; i++)
            {
                <div class="Pagina" id="@(i+1)">
                    <a href="/Libro/Elenco/@(urlQuery(i+1))">@(i + 1)</a>
                </div>
            }
        </div>
    </div>
</body>
</html>